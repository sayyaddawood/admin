{"ast":null,"code":"import _slicedToArray from \"C:\\\\projects\\\\New folder\\\\admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\projects\\\\New folder\\\\admin\\\\src\\\\context\\\\ApiContext.js\";\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { BASE_URL, header, findDuplicates } from '../UserComponents/Common';\nexport var ApiContext = createContext();\nexport var ApiProvider = function ApiProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      playerInfo = _useState2[0],\n      setplayerInfo = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      playerteamInfo = _useState4[0],\n      setplayerteamInfo = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      playercountryInfo = _useState6[0],\n      setcountryInfo = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      playermediainfo = _useState8[0],\n      setplayermediainfo = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      playertransferinfo = _useState10[0],\n      setplayertransferinfo = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      managerInfo = _useState12[0],\n      setmanagerInfo = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      managerteamInfo = _useState14[0],\n      setmanagerteamInfo = _useState14[1];\n\n  var _useState15 = useState({}),\n      _useState16 = _slicedToArray(_useState15, 2),\n      managercountryInfo = _useState16[0],\n      setmanagercountryInfo = _useState16[1];\n\n  var _useState17 = useState({}),\n      _useState18 = _slicedToArray(_useState17, 2),\n      managerperformance = _useState18[0],\n      setmanagerperformance = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      managercareer = _useState20[0],\n      setmanagercareer = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      categorieslist = _useState22[0],\n      setcategories = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      Uniquetournamentlist = _useState24[0],\n      setUniquetournamentlist = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      scheduledate = _useState26[0],\n      setScheduledate = _useState26[1];\n\n  var _useState27 = useState([]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      tournamentdata = _useState28[0],\n      settournamentdata = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      schedulecategory = _useState30[0],\n      setschedulecategory = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      isLoading = _useState32[0],\n      setIsLoading = _useState32[1];\n\n  var _useState33 = useState(true),\n      _useState34 = _slicedToArray(_useState33, 2),\n      isDisabled = _useState34[0],\n      setIsDisabled = _useState34[1];\n\n  var _useState35 = useState(''),\n      _useState36 = _slicedToArray(_useState35, 2),\n      message = _useState36[0],\n      setmessage = _useState36[1];\n\n  var _useState37 = useState([]),\n      _useState38 = _slicedToArray(_useState37, 2),\n      leaguestandingData = _useState38[0],\n      setleaguestandingData = _useState38[1];\n\n  var _useState39 = useState([]),\n      _useState40 = _slicedToArray(_useState39, 2),\n      leaguestandingTourInfo = _useState40[0],\n      setleaguestandingTourInfo = _useState40[1];\n\n  var _useState41 = useState([]),\n      _useState42 = _slicedToArray(_useState41, 2),\n      leagueCategoryInfo = _useState42[0],\n      setleagueCategoryInfo = _useState42[1];\n\n  var _useState43 = useState([]),\n      _useState44 = _slicedToArray(_useState43, 2),\n      leagueMatchesdata = _useState44[0],\n      setleagueMatchesdata = _useState44[1];\n\n  var getPlayerdatabyId = function getPlayerdatabyId(id) {\n    setIsLoading(true);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'players/data',\n      params: {\n        player_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setIsLoading(false);\n        setplayerInfo(response.data.data);\n        setplayerteamInfo(response.data.data.team);\n        setcountryInfo(response.data.data.country);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getPlayermedia = function getPlayermedia(id) {\n    setIsLoading(true);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'players/media',\n      params: {\n        player_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setplayermediainfo(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getPlayertransfarhistory = function getPlayertransfarhistory(id) {\n    setIsLoading(true);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'players/transfer-history',\n      params: {\n        player_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setplayertransferinfo(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getManagerdatabyId = function getManagerdatabyId(id) {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'managers/data',\n      params: {\n        manager_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setmanagerInfo(response.data.data);\n        setmanagerteamInfo(response.data.data.team);\n        setmanagercountryInfo(response.data.data.country);\n        setmanagerperformance(response.data.data.performance);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getManagercareer = function getManagercareer(id) {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'managers/career-history',\n      params: {\n        manager_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setmanagercareer(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getcategories = function getcategories() {\n    setIsLoading(true);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'categories',\n      params: {\n        sport_id: '1'\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        // console.log(response);\n        setIsLoading(false);\n        setcategories(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getUniquetournament = function getUniquetournament(id) {\n    setIsLoading(true);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'unique-tournaments',\n      params: {\n        category_id: id\n      },\n      headers: header()\n    }; // console.log(options)\n\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setIsLoading(false);\n        setUniquetournamentlist(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getSchedulecategory = function getSchedulecategory(id) {\n    setIsLoading(true);\n    var currentDate = new Date().toJSON().slice(0, 10);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'events/schedule/category',\n      params: {\n        date: currentDate,\n        category_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      setIsLoading(false);\n\n      if (response.status == 200) {\n        setschedulecategory(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getTopLegue = function getTopLegue() {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'unique-tournaments-top',\n      params: {\n        locale: 'DE'\n      },\n      headers: header()\n    };\n    var Topleagues = [];\n    axios.request(options).then(function (response) {\n      setIsLoading(false);\n\n      if (response.status == 200) {\n        for (var i in response.data.data.topUniqueTournamentIds) {\n          for (var j in response.data.data.uniqueTournaments) {\n            if (response.data.data.topUniqueTournamentIds[i] === response.data.data.uniqueTournaments[j].id) {\n              Topleagues.push(response.data.data.uniqueTournaments[i]);\n            }\n          }\n        } // console.log(Topleagues)\n\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getTournament = function getTournament() {\n    var currentDate = new Date().toJSON().slice(0, 10);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'events/schedule/date',\n      params: {\n        date: currentDate,\n        sport_id: '1'\n      },\n      headers: header()\n    };\n    var tourName = [];\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        for (var i = 0; i < response.data.data.length; i++) {\n          tourName.push(response.data.data[i].tournament);\n        }\n\n        if (tourName != null && tourName != []) {\n          var tourdata = [];\n          var uniqueObject = {};\n\n          for (var _i in tourName) {\n            var objTitle = tourName[_i]['name'];\n            uniqueObject[objTitle] = tourName[_i];\n          }\n\n          for (var _i2 in uniqueObject) {\n            var matchdata = [];\n\n            for (var j in response.data.data) {\n              if (response.data.data[j].tournament.name == uniqueObject[_i2].name && response.data.data[j].tournament.category.id == uniqueObject[_i2].category.id) {\n                matchdata.push(response.data.data[j]);\n              }\n            }\n\n            tourdata.push({\n              tourdata: uniqueObject[_i2],\n              matchdata: matchdata\n            });\n          }\n\n          settournamentdata(tourdata);\n        }\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getleaguetandingdata = function getleaguetandingdata(id, type, sid) {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'seasons/standings',\n      params: {\n        standing_type: type,\n        seasons_id: sid,\n        unique_tournament_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setleaguestandingTourInfo(response.data.data[0].tournament.uniqueTournament);\n        setleagueCategoryInfo(response.data.data[0].tournament.category);\n        setleaguestandingData(response.data.data[0].rows);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getMatchdataBytourandSeasonIds = function getMatchdataBytourandSeasonIds(id, sid) {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'seasons/events',\n      params: {\n        course_events: 'last',\n        page: '0',\n        seasons_id: sid,\n        unique_tournament_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setleagueMatchesdata(response.data.data.events);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getTeamStatistics = function getTeamStatistics() {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'seasons/teams-statistics/result',\n      params: {\n        seasons_id: '37036',\n        seasons_statistics_type: 'overall',\n        unique_tournament_id: '17'\n      },\n      headers: header()\n    };\n    var team = [];\n    var avgRating = [];\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        for (var i = 0; i < response.data.data.avgRating.length; i++) {\n          team.push({\n            teamId: response.data.data.avgRating[i].team.id,\n            teamName: response.data.data.avgRating[i].team.name,\n            avgRating: response.data.data.avgRating[i].statistics.avgRating\n          }); // avgRating.push()\n        }\n\n        console.log(team);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var MemberVerification = function MemberVerification() {\n    alert(\"hello ssssssss\");\n  };\n\n  return /*#__PURE__*/React.createElement(ApiContext.Provider, {\n    value: {\n      getPlayerdatabyId: getPlayerdatabyId,\n      MemberVerification: MemberVerification,\n      getcategories: getcategories,\n      getManagerdatabyId: getManagerdatabyId,\n      getUniquetournament: getUniquetournament,\n      getSchedulecategory: getSchedulecategory,\n      getTournament: getTournament,\n      getPlayermedia: getPlayermedia,\n      getTopLegue: getTopLegue,\n      getPlayertransfarhistory: getPlayertransfarhistory,\n      getManagercareer: getManagercareer,\n      getleaguetandingdata: getleaguetandingdata,\n      getMatchdataBytourandSeasonIds: getMatchdataBytourandSeasonIds,\n      getTeamStatistics: getTeamStatistics,\n      leagueMatchesdata: leagueMatchesdata,\n      leagueCategoryInfo: leagueCategoryInfo,\n      leaguestandingTourInfo: leaguestandingTourInfo,\n      leaguestandingData: leaguestandingData,\n      playertransferinfo: playertransferinfo,\n      managercareer: managercareer,\n      tournamentdata: tournamentdata,\n      playermediainfo: playermediainfo,\n      Uniquetournamentlist: Uniquetournamentlist,\n      scheduledate: scheduledate,\n      schedulecategory: schedulecategory,\n      playerInfo: playerInfo,\n      playercountryInfo: playercountryInfo,\n      playerteamInfo: playerteamInfo,\n      categorieslist: categorieslist,\n      managerInfo: managerInfo,\n      managerteamInfo: managerteamInfo,\n      managercountryInfo: managercountryInfo,\n      managerperformance: managerperformance,\n      isLoading: isLoading,\n      isDisabled: isDisabled\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","axios","BASE_URL","header","findDuplicates","ApiContext","ApiProvider","children","playerInfo","setplayerInfo","playerteamInfo","setplayerteamInfo","playercountryInfo","setcountryInfo","playermediainfo","setplayermediainfo","playertransferinfo","setplayertransferinfo","managerInfo","setmanagerInfo","managerteamInfo","setmanagerteamInfo","managercountryInfo","setmanagercountryInfo","managerperformance","setmanagerperformance","managercareer","setmanagercareer","categorieslist","setcategories","Uniquetournamentlist","setUniquetournamentlist","scheduledate","setScheduledate","tournamentdata","settournamentdata","schedulecategory","setschedulecategory","isLoading","setIsLoading","isDisabled","setIsDisabled","message","setmessage","leaguestandingData","setleaguestandingData","leaguestandingTourInfo","setleaguestandingTourInfo","leagueCategoryInfo","setleagueCategoryInfo","leagueMatchesdata","setleagueMatchesdata","getPlayerdatabyId","id","options","method","url","params","player_id","headers","request","then","response","status","data","team","country","catch","error","console","getPlayermedia","getPlayertransfarhistory","getManagerdatabyId","manager_id","performance","getManagercareer","getcategories","sport_id","getUniquetournament","category_id","getSchedulecategory","currentDate","Date","toJSON","slice","date","getTopLegue","locale","Topleagues","i","topUniqueTournamentIds","j","uniqueTournaments","push","getTournament","tourName","length","tournament","tourdata","uniqueObject","objTitle","matchdata","name","category","getleaguetandingdata","type","sid","standing_type","seasons_id","unique_tournament_id","uniqueTournament","rows","getMatchdataBytourandSeasonIds","course_events","page","events","getTeamStatistics","seasons_statistics_type","avgRating","teamId","teamName","statistics","log","MemberVerification","alert"],"sources":["C:/projects/New folder/admin/src/context/ApiContext.js"],"sourcesContent":["import React, {createContext,useContext, useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {BASE_URL,header,findDuplicates } from '../UserComponents/Common';\r\nexport const ApiContext = createContext();\r\nexport const ApiProvider = ({children}) => {\r\n\r\n  const [playerInfo, setplayerInfo] = useState([]);\r\n  const [playerteamInfo, setplayerteamInfo] = useState({});\r\n  const [playercountryInfo, setcountryInfo] = useState({});\r\n  const [playermediainfo, setplayermediainfo] = useState([]);\r\n  const [playertransferinfo, setplayertransferinfo] = useState([]);\r\n\r\n\r\n\r\n  const [managerInfo, setmanagerInfo] = useState({});\r\n  const [managerteamInfo, setmanagerteamInfo] = useState({});\r\n  const [managercountryInfo, setmanagercountryInfo] = useState({});\r\n  const [managerperformance, setmanagerperformance] = useState({});\r\n  const [managercareer, setmanagercareer] = useState([]);\r\n\r\n  const [categorieslist, setcategories]=useState([])\r\n  const [Uniquetournamentlist, setUniquetournamentlist]=useState([])\r\n\r\n  const [scheduledate,setScheduledate]=useState([])\r\n  const [tournamentdata,settournamentdata]=useState([])\r\n\r\n  const [schedulecategory,setschedulecategory]=useState([])\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [message, setmessage] = useState('');\r\n\r\n\r\n  const [leaguestandingData,setleaguestandingData]=useState([])\r\n  const [leaguestandingTourInfo,setleaguestandingTourInfo]=useState([])\r\n  const [leagueCategoryInfo,setleagueCategoryInfo]=useState([])\r\n  const [leagueMatchesdata,setleagueMatchesdata]=useState([])\r\n\r\n\r\n \r\nconst getPlayerdatabyId= (id) => {\r\n  setIsLoading(true)\r\nconst options = {\r\n  method: 'GET',\r\n  url: BASE_URL+'players/data',\r\n  params: {player_id: id},\r\n  headers: header()\r\n}\r\n axios.request(options).then(function (response) {\r\n  if(response.status==200)\r\n  {\r\n    setIsLoading(false)\r\n    setplayerInfo(response.data.data)\r\n    setplayerteamInfo(response.data.data.team)\r\n    setcountryInfo(response.data.data.country)\r\n   }\r\n}).catch(function (error) {\r\n\tconsole.error(error);\r\n});\r\n         \r\n  };\r\n\r\n  const getPlayermedia= (id) => {\r\n    setIsLoading(true)\r\n  const options = {\r\n    method: 'GET',\r\n    url: BASE_URL+'players/media',\r\n    params: {player_id: id},\r\n    headers: header()\r\n  }\r\n   axios.request(options).then(function (response) {\r\n    if(response.status==200)\r\n    {\r\n      setplayermediainfo(response.data.data)\r\n     }\r\n  }).catch(function (error) {\r\n    console.error(error);\r\n  });\r\n           \r\n    };\r\n\r\n    const getPlayertransfarhistory= (id) => {\r\n      setIsLoading(true)\r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'players/transfer-history',\r\n      params: {player_id: id},\r\n      headers: header()\r\n    }\r\n     axios.request(options).then(function (response) {\r\n      if(response.status==200)\r\n      {\r\n        setplayertransferinfo(response.data.data)\r\n       }\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n             \r\n      };\r\n  \r\n\r\n\r\n\r\n  const  getManagerdatabyId= (id) => {\r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'managers/data',\r\n      params: {manager_id: id},\r\n      headers: header()\r\n    }\r\n    axios.request(options).then(function (response) {\r\n      if(response.status==200)\r\n      {\r\n        setmanagerInfo(response.data.data)\r\n        setmanagerteamInfo(response.data.data.team)\r\n        setmanagercountryInfo(response.data.data.country)\r\n        setmanagerperformance(response.data.data.performance)\r\n      }\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n    \r\n  }\r\n\r\n\r\n  const  getManagercareer= (id) => {\r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'managers/career-history',\r\n      params: {manager_id: id},\r\n      headers: header()\r\n    }\r\n    axios.request(options).then(function (response) {\r\n      if(response.status==200)\r\n      {\r\n        setmanagercareer(response.data.data)\r\n      }\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n    \r\n  }\r\n\r\n\r\n  const  getcategories= () => {\r\n    setIsLoading(true)\r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'categories',\r\n      params: {sport_id: '1'},\r\n      headers: header()\r\n    }\r\n    axios.request(options).then(function (response) {\r\n      if(response.status==200)\r\n      {\r\n        // console.log(response);\r\n        setIsLoading(false)\r\n        setcategories(response.data.data)\r\n      }\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n    \r\n  }\r\n\r\n  const getUniquetournament= (id) => {\r\n    setIsLoading(true)\r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'unique-tournaments',\r\n      params: {category_id: id},\r\n      headers: header()\r\n    };\r\n    // console.log(options)\r\n    axios.request(options).then(function (response) {\r\n      if(response.status==200)\r\n      {\r\n        setIsLoading(false)\r\n        setUniquetournamentlist(response.data.data)\r\n      }\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n const getSchedulecategory = (id) => {\r\n  setIsLoading(true)\r\n    let currentDate = new Date().toJSON().slice(0, 10);\r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'events/schedule/category',\r\n      params: {date: currentDate, category_id: id},\r\n      headers: header()\r\n    }\r\n    axios.request(options).then(function (response) {\r\n      setIsLoading(false)\r\n      if(response.status==200)\r\n      {   \r\n       setschedulecategory(response.data.data)   \r\n      }\r\n\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n    \r\n  }\r\n\r\n  const getTopLegue = () => { \r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'unique-tournaments-top',\r\n      params: {locale: 'DE'},\r\n      headers: header()\r\n    }\r\n    var Topleagues=[]\r\n    axios.request(options).then(function (response) {\r\n      setIsLoading(false)\r\n      if(response.status==200)\r\n      {   \r\n        for(let i in response.data.data.topUniqueTournamentIds)\r\n        {\r\n          for(let j in  response.data.data.uniqueTournaments){\r\n          if(response.data.data.topUniqueTournamentIds[i]===response.data.data.uniqueTournaments[j].id)\r\n          {\r\n            Topleagues.push(response.data.data.uniqueTournaments[i])\r\n          }\r\n         }\r\n        }\r\n        // console.log(Topleagues)\r\n      }\r\n\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n   }\r\n\r\n  const getTournament = () => {\r\n    let currentDate = new Date().toJSON().slice(0, 10);\r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'events/schedule/date',\r\n      params: {date: currentDate , sport_id: '1'},\r\n      headers: header()\r\n    }\r\n\r\n    let  tourName = [];\r\n\r\n    axios.request(options).then(function (response) {\r\n      if(response.status==200)\r\n      {\r\n          for (let i = 0; i < response.data.data.length ; i++) {\r\n            tourName.push(response.data.data[i].tournament)\r\n          }\r\n          if(tourName!=null && tourName!=[])\r\n          {\r\n                 let tourdata = [];  \r\n                 let uniqueObject = {};\r\n              \r\n                 for (let i in tourName) {\r\n                    let objTitle = tourName[i]['name'];\r\n                     uniqueObject[objTitle] = tourName[i];\r\n                 }\r\n                 \r\n                 for ( let i in uniqueObject) {\r\n                  var matchdata=[]\r\n                  for(let j in response.data.data) {\r\n                    if(response.data.data[j].tournament.name == uniqueObject[i].name && \r\n                      response.data.data[j].tournament.category.id==uniqueObject[i].category.id)\r\n                       { matchdata.push(response.data.data[j])}\r\n                    }\r\n                  tourdata.push({tourdata:uniqueObject[i],matchdata})\r\n                 }\r\n                 settournamentdata(tourdata)\r\n               }\r\n  \r\n      }\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n    \r\n  }\r\n\r\n\r\n  const getleaguetandingdata = (id,type,sid) => {\r\n  \r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'seasons/standings',\r\n      params: {standing_type: type , seasons_id: sid, unique_tournament_id: id},\r\n      headers: header()\r\n    }\r\n\r\n    axios.request(options).then(function (response) {\r\n      if(response.status==200)\r\n      {\r\n       setleaguestandingTourInfo(response.data.data[0].tournament.uniqueTournament)\r\n       setleagueCategoryInfo(response.data.data[0].tournament.category)\r\n       setleaguestandingData(response.data.data[0].rows)\r\n      }\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });  \r\n\r\n};\r\n\r\nconst getMatchdataBytourandSeasonIds = (id,sid) => {\r\n     const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'seasons/events',\r\n      params: {\r\n        course_events: 'last',page: '0',seasons_id: sid,unique_tournament_id: id\r\n      },\r\n      headers: header()\r\n    }\r\n\r\n    axios.request(options).then(function (response) {\r\n      if(response.status==200)\r\n      {\r\n        setleagueMatchesdata(response.data.data.events)\r\n      }\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n};\r\n\r\n\r\nconst getTeamStatistics = () => {\r\n  const options = {\r\n    method: 'GET',\r\n    url: BASE_URL+'seasons/teams-statistics/result',\r\n    params: {\r\n      seasons_id: '37036',\r\n      seasons_statistics_type: 'overall',\r\n      unique_tournament_id: '17'\r\n    },\r\n    headers: header()\r\n  }\r\n  let  team = [];\r\n  let  avgRating=[]; \r\n  axios.request(options).then(function (response) {\r\n    if(response.status==200)\r\n    {\r\n      for (let i = 0; i < response.data.data.avgRating.length ; i++) {\r\n        team.push({\r\n                   teamId:response.data.data.avgRating[i].team.id,\r\n                   teamName:response.data.data.avgRating[i].team.name,\r\n                   avgRating:response.data.data.avgRating[i].statistics.avgRating,\r\n                  })\r\n        // avgRating.push()\r\n      }\r\n      console.log(team)\r\n      \r\n    }\r\n  }).catch(function (error) {\r\n    console.error(error);\r\n  });\r\n};\r\n\r\n  const MemberVerification = () => {\r\n      alert(\"hello ssssssss\");\r\n  };\r\n\r\n\r\n  return (\r\n    <ApiContext.Provider\r\n      value={{\r\n        getPlayerdatabyId,\r\n        MemberVerification,\r\n        getcategories,\r\n        getManagerdatabyId,\r\n        getUniquetournament,\r\n        getSchedulecategory, \r\n        getTournament,\r\n        getPlayermedia,\r\n        getTopLegue,\r\n        getPlayertransfarhistory,\r\n        getManagercareer,\r\n        getleaguetandingdata,\r\n        getMatchdataBytourandSeasonIds,\r\n        getTeamStatistics,\r\n        \r\n        leagueMatchesdata,\r\n        leagueCategoryInfo,\r\n        leaguestandingTourInfo,\r\n        leaguestandingData,\r\n        playertransferinfo,\r\n        managercareer,\r\n        tournamentdata,\r\n        playermediainfo,\r\n        Uniquetournamentlist,\r\n        scheduledate,\r\n        schedulecategory,\r\n        playerInfo,\r\n        playercountryInfo,\r\n        playerteamInfo,\r\n        categorieslist,\r\n        managerInfo,\r\n        managerteamInfo,\r\n        managercountryInfo,\r\n        managerperformance,\r\n        isLoading,\r\n        isDisabled\r\n      }}>\r\n      {children}\r\n    </ApiContext.Provider>\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}