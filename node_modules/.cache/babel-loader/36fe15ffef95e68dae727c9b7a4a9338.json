{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar className = 'react-calendar__tile';\nexport default function WeekNumber(props) {\n  var onClickWeekNumber = props.onClickWeekNumber,\n      weekNumber = props.weekNumber;\n  var children = React.createElement(\"span\", null, weekNumber);\n\n  if (onClickWeekNumber) {\n    var date_1 = props.date,\n        onClickWeekNumber_1 = props.onClickWeekNumber,\n        weekNumber_1 = props.weekNumber,\n        otherProps = __rest(props, [\"date\", \"onClickWeekNumber\", \"weekNumber\"]);\n\n    return React.createElement(\"button\", __assign({}, otherProps, {\n      className: className,\n      onClick: function onClick(event) {\n        return onClickWeekNumber_1(weekNumber_1, date_1, event);\n      },\n      type: \"button\"\n    }), children);\n  } else {\n    var date = props.date,\n        onClickWeekNumber_2 = props.onClickWeekNumber,\n        weekNumber_2 = props.weekNumber,\n        otherProps = __rest(props, [\"date\", \"onClickWeekNumber\", \"weekNumber\"]);\n\n    return React.createElement(\"div\", __assign({}, otherProps, {\n      className: className\n    }), children);\n  }\n}\nWeekNumber.propTypes = {\n  date: PropTypes.instanceOf(Date).isRequired,\n  onClickWeekNumber: PropTypes.func,\n  weekNumber: PropTypes.node.isRequired\n};","map":null,"metadata":{},"sourceType":"module"}