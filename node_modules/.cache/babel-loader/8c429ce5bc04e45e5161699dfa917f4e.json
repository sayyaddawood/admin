{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUserLocale } from 'get-user-locale';\nimport { getCenturyLabel, getDecadeLabel, getBeginNext, getBeginNext2, getBeginPrevious, getBeginPrevious2, getEndPrevious, getEndPrevious2 } from '../shared/dates';\nimport { formatMonthYear as defaultFormatMonthYear, formatYear as defaultFormatYear } from '../shared/dateFormatter';\nimport { isView, isViews } from '../shared/propTypes';\nvar className = 'react-calendar__navigation';\nexport default function Navigation(_a) {\n  var activeStartDate = _a.activeStartDate,\n      drillUp = _a.drillUp,\n      _b = _a.formatMonthYear,\n      formatMonthYear = _b === void 0 ? defaultFormatMonthYear : _b,\n      _c = _a.formatYear,\n      formatYear = _c === void 0 ? defaultFormatYear : _c,\n      locale = _a.locale,\n      maxDate = _a.maxDate,\n      minDate = _a.minDate,\n      _d = _a.navigationAriaLabel,\n      navigationAriaLabel = _d === void 0 ? '' : _d,\n      navigationAriaLive = _a.navigationAriaLive,\n      navigationLabel = _a.navigationLabel,\n      _e = _a.next2AriaLabel,\n      next2AriaLabel = _e === void 0 ? '' : _e,\n      _f = _a.next2Label,\n      next2Label = _f === void 0 ? '»' : _f,\n      _g = _a.nextAriaLabel,\n      nextAriaLabel = _g === void 0 ? '' : _g,\n      _h = _a.nextLabel,\n      nextLabel = _h === void 0 ? '›' : _h,\n      _j = _a.prev2AriaLabel,\n      prev2AriaLabel = _j === void 0 ? '' : _j,\n      _k = _a.prev2Label,\n      prev2Label = _k === void 0 ? '«' : _k,\n      _l = _a.prevAriaLabel,\n      prevAriaLabel = _l === void 0 ? '' : _l,\n      _m = _a.prevLabel,\n      prevLabel = _m === void 0 ? '‹' : _m,\n      setActiveStartDate = _a.setActiveStartDate,\n      showDoubleView = _a.showDoubleView,\n      view = _a.view,\n      views = _a.views;\n  var drillUpAvailable = views.indexOf(view) > 0;\n  var shouldShowPrevNext2Buttons = view !== 'century';\n  var previousActiveStartDate = getBeginPrevious(view, activeStartDate);\n  var previousActiveStartDate2 = shouldShowPrevNext2Buttons ? getBeginPrevious2(view, activeStartDate) : undefined;\n  var nextActiveStartDate = getBeginNext(view, activeStartDate);\n  var nextActiveStartDate2 = shouldShowPrevNext2Buttons ? getBeginNext2(view, activeStartDate) : undefined;\n\n  var prevButtonDisabled = function () {\n    if (previousActiveStartDate.getFullYear() < 0) {\n      return true;\n    }\n\n    var previousActiveEndDate = getEndPrevious(view, activeStartDate);\n    return minDate && minDate >= previousActiveEndDate;\n  }();\n\n  var prev2ButtonDisabled = shouldShowPrevNext2Buttons && function () {\n    if (previousActiveStartDate2.getFullYear() < 0) {\n      return true;\n    }\n\n    var previousActiveEndDate = getEndPrevious2(view, activeStartDate);\n    return minDate && minDate >= previousActiveEndDate;\n  }();\n\n  var nextButtonDisabled = maxDate && maxDate < nextActiveStartDate;\n  var next2ButtonDisabled = shouldShowPrevNext2Buttons && maxDate && maxDate < nextActiveStartDate2;\n\n  function onClickPrevious() {\n    setActiveStartDate(previousActiveStartDate, 'prev');\n  }\n\n  function onClickPrevious2() {\n    setActiveStartDate(previousActiveStartDate2, 'prev2');\n  }\n\n  function onClickNext() {\n    setActiveStartDate(nextActiveStartDate, 'next');\n  }\n\n  function onClickNext2() {\n    setActiveStartDate(nextActiveStartDate2, 'next2');\n  }\n\n  function renderLabel(date) {\n    var label = function () {\n      switch (view) {\n        case 'century':\n          return getCenturyLabel(locale, formatYear, date);\n\n        case 'decade':\n          return getDecadeLabel(locale, formatYear, date);\n\n        case 'year':\n          return formatYear(locale, date);\n\n        case 'month':\n          return formatMonthYear(locale, date);\n\n        default:\n          throw new Error(\"Invalid view: \".concat(view, \".\"));\n      }\n    }();\n\n    return navigationLabel ? navigationLabel({\n      date: date,\n      label: label,\n      locale: locale || getUserLocale() || undefined,\n      view: view\n    }) : label;\n  }\n\n  function renderButton() {\n    var labelClassName = \"\".concat(className, \"__label\");\n    return React.createElement(\"button\", {\n      \"aria-label\": navigationAriaLabel,\n      \"aria-live\": navigationAriaLive,\n      className: labelClassName,\n      disabled: !drillUpAvailable,\n      onClick: drillUp,\n      style: {\n        flexGrow: 1\n      },\n      type: \"button\"\n    }, React.createElement(\"span\", {\n      className: \"\".concat(labelClassName, \"__labelText \").concat(labelClassName, \"__labelText--from\")\n    }, renderLabel(activeStartDate)), showDoubleView ? React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      className: \"\".concat(labelClassName, \"__divider\")\n    }, \" \\u2013 \"), React.createElement(\"span\", {\n      className: \"\".concat(labelClassName, \"__labelText \").concat(labelClassName, \"__labelText--to\")\n    }, renderLabel(nextActiveStartDate))) : null);\n  }\n\n  return React.createElement(\"div\", {\n    className: className\n  }, prev2Label !== null && shouldShowPrevNext2Buttons ? React.createElement(\"button\", {\n    \"aria-label\": prev2AriaLabel,\n    className: \"\".concat(className, \"__arrow \").concat(className, \"__prev2-button\"),\n    disabled: prev2ButtonDisabled,\n    onClick: onClickPrevious2,\n    type: \"button\"\n  }, prev2Label) : null, prevLabel !== null && React.createElement(\"button\", {\n    \"aria-label\": prevAriaLabel,\n    className: \"\".concat(className, \"__arrow \").concat(className, \"__prev-button\"),\n    disabled: prevButtonDisabled,\n    onClick: onClickPrevious,\n    type: \"button\"\n  }, prevLabel), renderButton(), nextLabel !== null && React.createElement(\"button\", {\n    \"aria-label\": nextAriaLabel,\n    className: \"\".concat(className, \"__arrow \").concat(className, \"__next-button\"),\n    disabled: nextButtonDisabled,\n    onClick: onClickNext,\n    type: \"button\"\n  }, nextLabel), next2Label !== null && shouldShowPrevNext2Buttons ? React.createElement(\"button\", {\n    \"aria-label\": next2AriaLabel,\n    className: \"\".concat(className, \"__arrow \").concat(className, \"__next2-button\"),\n    disabled: next2ButtonDisabled,\n    onClick: onClickNext2,\n    type: \"button\"\n  }, next2Label) : null);\n}\nNavigation.propTypes = {\n  activeStartDate: PropTypes.instanceOf(Date).isRequired,\n  drillUp: PropTypes.func.isRequired,\n  formatMonthYear: PropTypes.func,\n  formatYear: PropTypes.func,\n  locale: PropTypes.string,\n  maxDate: PropTypes.instanceOf(Date),\n  minDate: PropTypes.instanceOf(Date),\n  navigationAriaLabel: PropTypes.string,\n  navigationAriaLive: PropTypes.string,\n  navigationLabel: PropTypes.func,\n  next2AriaLabel: PropTypes.string,\n  next2Label: PropTypes.node,\n  nextAriaLabel: PropTypes.string,\n  nextLabel: PropTypes.node,\n  prev2AriaLabel: PropTypes.string,\n  prev2Label: PropTypes.node,\n  prevAriaLabel: PropTypes.string,\n  prevLabel: PropTypes.node,\n  setActiveStartDate: PropTypes.func.isRequired,\n  showDoubleView: PropTypes.bool,\n  view: isView.isRequired,\n  views: isViews.isRequired\n};","map":null,"metadata":{},"sourceType":"module"}