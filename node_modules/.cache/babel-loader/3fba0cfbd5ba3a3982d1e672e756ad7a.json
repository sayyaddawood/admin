{"ast":null,"code":"import PropTypes from 'prop-types';\nimport { CALENDAR_TYPES } from './const';\nvar calendarTypes = Object.values(CALENDAR_TYPES);\nvar allViews = ['century', 'decade', 'year', 'month'];\nexport var isCalendarType = PropTypes.oneOf(calendarTypes);\nexport var isClassName = PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]);\nexport function isMinDate(props, propName, componentName) {\n  var _a = props,\n      _b = propName,\n      minDate = _a[_b];\n\n  if (!minDate) {\n    return null;\n  }\n\n  if (!(minDate instanceof Date)) {\n    return new Error(\"Invalid prop `\".concat(propName, \"` of type `\").concat(typeof minDate, \"` supplied to `\").concat(componentName, \"`, expected instance of `Date`.\"));\n  }\n\n  var maxDate = props.maxDate;\n\n  if (maxDate && minDate > maxDate) {\n    return new Error(\"Invalid prop `\".concat(propName, \"` of type `\").concat(typeof minDate, \"` supplied to `\").concat(componentName, \"`, minDate cannot be larger than maxDate.\"));\n  }\n\n  return null;\n}\nexport function isMaxDate(props, propName, componentName) {\n  var _a = props,\n      _b = propName,\n      maxDate = _a[_b];\n\n  if (!maxDate) {\n    return null;\n  }\n\n  if (!(maxDate instanceof Date)) {\n    return new Error(\"Invalid prop `\".concat(propName, \"` of type `\").concat(typeof maxDate, \"` supplied to `\").concat(componentName, \"`, expected instance of `Date`.\"));\n  }\n\n  var minDate = props.minDate;\n\n  if (minDate && maxDate < minDate) {\n    return new Error(\"Invalid prop `\".concat(propName, \"` of type `\").concat(typeof maxDate, \"` supplied to `\").concat(componentName, \"`, maxDate cannot be smaller than minDate.\"));\n  }\n\n  return null;\n}\nexport var isRef = PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n  current: PropTypes.any\n})]);\nexport var isValue = PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.arrayOf(PropTypes.instanceOf(Date))]);\nexport var isViews = PropTypes.arrayOf(PropTypes.oneOf(allViews));\nexport function isView(props, propName, componentName) {\n  var _a = props,\n      _b = propName,\n      view = _a[_b];\n  var views = props.views;\n  var allowedViews = views || allViews;\n\n  if (view !== undefined && (typeof view !== 'string' || allowedViews.indexOf(view) === -1)) {\n    return new Error(\"Invalid prop `\".concat(propName, \"` of value `\").concat(view, \"` supplied to `\").concat(componentName, \"`, expected one of [\").concat(allowedViews.map(function (a) {\n      return \"\\\"\".concat(a, \"\\\"\");\n    }).join(', '), \"].\"));\n  } // Everything is fine\n\n\n  return null;\n}\n\nisView.isRequired = function (props, propName, componentName) {\n  var _a = props,\n      _b = propName,\n      view = _a[_b];\n\n  if (!view) {\n    return new Error(\"The prop `\".concat(propName, \"` is marked as required in `\").concat(componentName, \"`, but its value is `\").concat(view, \"`.\"));\n  }\n\n  return isView(props, propName, componentName);\n};\n\nexport var tileGroupProps = {\n  activeStartDate: PropTypes.instanceOf(Date).isRequired,\n  hover: PropTypes.instanceOf(Date),\n  locale: PropTypes.string,\n  maxDate: isMaxDate,\n  minDate: isMinDate,\n  onClick: PropTypes.func,\n  onMouseOver: PropTypes.func,\n  tileClassName: PropTypes.oneOfType([PropTypes.func, isClassName]),\n  tileContent: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  value: isValue,\n  valueType: PropTypes.string\n};\nexport var tileProps = {\n  activeStartDate: PropTypes.instanceOf(Date).isRequired,\n  classes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  locale: PropTypes.string,\n  maxDate: isMaxDate,\n  minDate: isMinDate,\n  onClick: PropTypes.func,\n  onMouseOver: PropTypes.func,\n  style: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  tileClassName: PropTypes.oneOfType([PropTypes.func, isClassName]),\n  tileContent: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  tileDisabled: PropTypes.func\n};","map":null,"metadata":{},"sourceType":"module"}