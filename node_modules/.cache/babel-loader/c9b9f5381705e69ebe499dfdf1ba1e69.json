{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Flex from './Flex';\nimport { getTileClasses } from './shared/utils';\nimport { tileGroupProps } from './shared/propTypes';\nexport default function TileGroup(_a) {\n  var className = _a.className,\n      _b = _a.count,\n      count = _b === void 0 ? 3 : _b,\n      dateTransform = _a.dateTransform,\n      dateType = _a.dateType,\n      end = _a.end,\n      hover = _a.hover,\n      offset = _a.offset,\n      start = _a.start,\n      _c = _a.step,\n      step = _c === void 0 ? 1 : _c,\n      Tile = _a.tile,\n      value = _a.value,\n      valueType = _a.valueType,\n      tileProps = __rest(_a, [\"className\", \"count\", \"dateTransform\", \"dateType\", \"end\", \"hover\", \"offset\", \"start\", \"step\", \"tile\", \"value\", \"valueType\"]);\n\n  var tiles = [];\n\n  for (var point = start; point <= end; point += step) {\n    var date = dateTransform(point);\n    tiles.push(React.createElement(Tile, __assign({\n      key: date.getTime(),\n      classes: getTileClasses({\n        value: value,\n        valueType: valueType,\n        date: date,\n        dateType: dateType,\n        hover: hover\n      }),\n      date: date,\n      point: point\n    }, tileProps)));\n  }\n\n  return React.createElement(Flex, {\n    className: className,\n    count: count,\n    offset: offset,\n    wrap: true\n  }, tiles);\n}\nTileGroup.propTypes = __assign(__assign({}, tileGroupProps), {\n  className: PropTypes.string,\n  count: PropTypes.number,\n  dateTransform: PropTypes.func.isRequired,\n  dateType: PropTypes.string,\n  end: PropTypes.number.isRequired,\n  offset: PropTypes.number,\n  step: PropTypes.number,\n  start: PropTypes.number.isRequired,\n  tile: PropTypes.func.isRequired\n});","map":null,"metadata":{},"sourceType":"module"}