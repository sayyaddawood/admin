{"ast":null,"code":"import _slicedToArray from \"C:\\\\projects\\\\New folder\\\\admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\projects\\\\New folder\\\\admin\\\\src\\\\context\\\\ApiContext.js\";\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { BASE_URL, BASE_URL2, header, findDuplicates } from '../UserComponents/Common';\nexport var ApiContext = createContext();\nexport var ApiProvider = function ApiProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      playerInfo = _useState2[0],\n      setplayerInfo = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      playerteamInfo = _useState4[0],\n      setplayerteamInfo = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      playercountryInfo = _useState6[0],\n      setcountryInfo = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      playermediainfo = _useState8[0],\n      setplayermediainfo = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      playertransferinfo = _useState10[0],\n      setplayertransferinfo = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      managerInfo = _useState12[0],\n      setmanagerInfo = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      managerteamInfo = _useState14[0],\n      setmanagerteamInfo = _useState14[1];\n\n  var _useState15 = useState({}),\n      _useState16 = _slicedToArray(_useState15, 2),\n      managercountryInfo = _useState16[0],\n      setmanagercountryInfo = _useState16[1];\n\n  var _useState17 = useState({}),\n      _useState18 = _slicedToArray(_useState17, 2),\n      managerperformance = _useState18[0],\n      setmanagerperformance = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      managercareer = _useState20[0],\n      setmanagercareer = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      categorieslist = _useState22[0],\n      setcategories = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      Uniquetournamentlist = _useState24[0],\n      setUniquetournamentlist = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      scheduledate = _useState26[0],\n      setScheduledate = _useState26[1];\n\n  var _useState27 = useState([]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      tournamentdata = _useState28[0],\n      settournamentdata = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      schedulecategory = _useState30[0],\n      setschedulecategory = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      isLoading = _useState32[0],\n      setIsLoading = _useState32[1];\n\n  var _useState33 = useState(true),\n      _useState34 = _slicedToArray(_useState33, 2),\n      isDisabled = _useState34[0],\n      setIsDisabled = _useState34[1];\n\n  var _useState35 = useState(''),\n      _useState36 = _slicedToArray(_useState35, 2),\n      message = _useState36[0],\n      setmessage = _useState36[1];\n\n  var _useState37 = useState([]),\n      _useState38 = _slicedToArray(_useState37, 2),\n      leaguestandingData = _useState38[0],\n      setleaguestandingData = _useState38[1];\n\n  var _useState39 = useState([]),\n      _useState40 = _slicedToArray(_useState39, 2),\n      leaguestandingTourInfo = _useState40[0],\n      setleaguestandingTourInfo = _useState40[1];\n\n  var _useState41 = useState([]),\n      _useState42 = _slicedToArray(_useState41, 2),\n      leagueCategoryInfo = _useState42[0],\n      setleagueCategoryInfo = _useState42[1];\n\n  var _useState43 = useState([]),\n      _useState44 = _slicedToArray(_useState43, 2),\n      leagueMatchesdata = _useState44[0],\n      setleagueMatchesdata = _useState44[1];\n\n  var _useState45 = useState([]),\n      _useState46 = _slicedToArray(_useState45, 2),\n      teamStatisticsData = _useState46[0],\n      setteamStatisticsData = _useState46[1];\n\n  var _useState47 = useState([]),\n      _useState48 = _slicedToArray(_useState47, 2),\n      playerStatisticsData = _useState48[0],\n      setplayerStatisticsData = _useState48[1];\n\n  var _useState49 = useState([]),\n      _useState50 = _slicedToArray(_useState49, 2),\n      seasonsData = _useState50[0],\n      setseasonsData = _useState50[1];\n\n  var _useState51 = useState([]),\n      _useState52 = _slicedToArray(_useState51, 2),\n      TitleData = _useState52[0],\n      setTitleData = _useState52[1];\n\n  var _useState53 = useState([]),\n      _useState54 = _slicedToArray(_useState53, 2),\n      SeasonList = _useState54[0],\n      setSeasonList = _useState54[1];\n\n  var _useState55 = useState([]),\n      _useState56 = _slicedToArray(_useState55, 2),\n      Eventdata = _useState56[0],\n      setEventdata = _useState56[1];\n\n  var _useState57 = useState([]),\n      _useState58 = _slicedToArray(_useState57, 2),\n      teamSeasonStanding = _useState58[0],\n      setteamSeasonStanding = _useState58[1];\n\n  var _useState59 = useState([]),\n      _useState60 = _slicedToArray(_useState59, 2),\n      teamInfodata = _useState60[0],\n      setteamInfodata = _useState60[1];\n\n  var _useState61 = useState([]),\n      _useState62 = _slicedToArray(_useState61, 2),\n      teamCountry = _useState62[0],\n      setteamCountry = _useState62[1];\n\n  var _useState63 = useState([]),\n      _useState64 = _slicedToArray(_useState63, 2),\n      teamManagerInfo = _useState64[0],\n      setteamManagerInfo = _useState64[1];\n\n  var _useState65 = useState([]),\n      _useState66 = _slicedToArray(_useState65, 2),\n      teamVenueData = _useState66[0],\n      setteamVenueData = _useState66[1];\n\n  var _useState67 = useState([]),\n      _useState68 = _slicedToArray(_useState67, 2),\n      teamPlayer = _useState68[0],\n      setteamPlayer = _useState68[1];\n\n  var _useState69 = useState([]),\n      _useState70 = _slicedToArray(_useState69, 2),\n      Players = _useState70[0],\n      setPlayers = _useState70[1];\n\n  var _useState71 = useState([]),\n      _useState72 = _slicedToArray(_useState71, 2),\n      teamtournamentdata = _useState72[0],\n      setteamtournamentdata = _useState72[1];\n\n  var _useState73 = useState([]),\n      _useState74 = _slicedToArray(_useState73, 2),\n      teamEventData = _useState74[0],\n      setteamEventData = _useState74[1];\n\n  var getPlayerdatabyId = function getPlayerdatabyId(id) {\n    setIsLoading(true);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'players/data',\n      params: {\n        player_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setIsLoading(false);\n        setplayerInfo(response.data.data);\n        setplayerteamInfo(response.data.data.team);\n        setcountryInfo(response.data.data.country);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getPlayermedia = function getPlayermedia(id) {\n    setIsLoading(true);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'players/media',\n      params: {\n        player_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setplayermediainfo(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getPlayertransfarhistory = function getPlayertransfarhistory(id) {\n    setIsLoading(true);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'players/transfer-history',\n      params: {\n        player_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setplayertransferinfo(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getManagerdatabyId = function getManagerdatabyId(id) {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'managers/data',\n      params: {\n        manager_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setmanagerInfo(response.data.data);\n        setmanagerteamInfo(response.data.data.team);\n        setmanagercountryInfo(response.data.data.country);\n        setmanagerperformance(response.data.data.performance);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getManagercareer = function getManagercareer(id) {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'managers/career-history',\n      params: {\n        manager_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setmanagercareer(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getcategories = function getcategories() {\n    setIsLoading(true);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'categories',\n      params: {\n        sport_id: '1'\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        // console.log(response);\n        setIsLoading(false);\n        setcategories(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getUniquetournament = function getUniquetournament(id) {\n    setIsLoading(true);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'unique-tournaments',\n      params: {\n        category_id: id\n      },\n      headers: header()\n    }; // console.log(options)\n\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setIsLoading(false);\n        setUniquetournamentlist(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getSchedulecategory = function getSchedulecategory(id) {\n    setIsLoading(true);\n    var currentDate = new Date().toJSON().slice(0, 10);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'events/schedule/category',\n      params: {\n        date: currentDate,\n        category_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      setIsLoading(false);\n\n      if (response.status == 200) {\n        setschedulecategory(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getTopLegue = function getTopLegue() {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'unique-tournaments-top',\n      params: {\n        locale: 'DE'\n      },\n      headers: header()\n    };\n    var Topleagues = [];\n    axios.request(options).then(function (response) {\n      setIsLoading(false);\n\n      if (response.status == 200) {\n        for (var i in response.data.data.topUniqueTournamentIds) {\n          for (var j in response.data.data.uniqueTournaments) {\n            if (response.data.data.topUniqueTournamentIds[i] === response.data.data.uniqueTournaments[j].id) {\n              Topleagues.push(response.data.data.uniqueTournaments[i]);\n            }\n          }\n        } // console.log(Topleagues)\n\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getTournament = function getTournament(currentDate) {\n    if (currentDate == undefined || currentDate == \"\") {\n      currentDate = new Date().toJSON().slice(0, 10);\n    }\n\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'events/schedule/date',\n      params: {\n        date: currentDate,\n        sport_id: '1'\n      },\n      headers: header()\n    };\n    var tourName = [];\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        for (var i = 0; i < response.data.data.length; i++) {\n          tourName.push(response.data.data[i].tournament);\n        }\n\n        if (tourName != null && tourName != []) {\n          var tourdata = [];\n          var uniqueObject = {};\n\n          for (var _i in tourName) {\n            var objTitle = tourName[_i]['name'];\n            uniqueObject[objTitle] = tourName[_i];\n          }\n\n          for (var _i2 in uniqueObject) {\n            var matchdata = [];\n\n            for (var j in response.data.data) {\n              if (response.data.data[j].tournament.name == uniqueObject[_i2].name && response.data.data[j].tournament.category.id == uniqueObject[_i2].category.id) {\n                matchdata.push(response.data.data[j]);\n              }\n            }\n\n            tourdata.push({\n              tourdata: uniqueObject[_i2],\n              matchdata: matchdata\n            });\n          }\n\n          settournamentdata(tourdata);\n        }\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getleaguetandingdata = function getleaguetandingdata(id, type, sid) {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'seasons/standings',\n      params: {\n        standing_type: type,\n        seasons_id: sid,\n        unique_tournament_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setleaguestandingTourInfo(response.data.data[0].tournament.uniqueTournament);\n        setleagueCategoryInfo(response.data.data[0].tournament.category);\n        setleaguestandingData(response.data.data[0].rows);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getMatchdataBytourandSeasonIds = function getMatchdataBytourandSeasonIds(id, sid) {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'seasons/events',\n      params: {\n        course_events: 'last',\n        page: '0',\n        seasons_id: sid,\n        unique_tournament_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setleagueMatchesdata(response.data.data.events);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }; // const getPlayerStatistics = (id,Sid) => {\n  //   const options = {\n  //     method: 'GET',\n  //     url:BASE_URL2+'unique-tournament/'+id+'/season/'+Sid+'/statistics?limit=20&order=-rating&offset=20&accumulation=total&group=summary',\n  //   }\n  //   axios.request(options).then(function (response) {\n  //     if(response.status==200)\n  //     {\n  //      setplayerStatisticsData(response.data.results)\n  //     }\n  //   }).catch(function (error) {\n  //     console.error(error);\n  //   });\n  // };\n\n\n  var getPlayerStatistics = function getPlayerStatistics(id, Sid) {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'seasons/players-statistics/result',\n      params: {\n        unique_tournament_id: id,\n        seasons_id: Sid,\n        seasons_statistics_type: 'overall'\n      },\n      headers: header()\n    };\n    var playerStatistics = [];\n    var tackles = [];\n    var goals = [];\n    var assists = [];\n    var EXgoals = [];\n    var successfulDribbles = [];\n    var accuratePasses = [];\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        for (var i = 0; i < response.data.data.rating.length; i++) {\n          for (var j = 0; j < response.data.data.rating.length; j++) {\n            if (response.data.data.rating[i].player.id === response.data.data.tackles[j].player.id) tackles.push(response.data.data.tackles[j].statistics.tackles);\n            if (response.data.data.rating[i].player.id === response.data.data.goals[j].player.id) goals.push(response.data.data.goals[j].statistics.goals);\n            if (response.data.data.rating[i].player.id === response.data.data.accuratePasses[j].player.id) accuratePasses.push(response.data.data.accuratePasses[j].statistics.accuratePassesPercentage);\n            if (response.data.data.rating[i].player.id === response.data.data.assists[j].player.id) assists.push(response.data.data.assists[j].statistics.assists); // if(response.data.data.avgRating[i].team.id===response.data.data.goalsConceded[j].team.id)\n            //     goalsConceded.push(response.data.data.goalsConceded[j].statistics.goalsConceded)\n\n            if (response.data.data.rating[i].player.id === response.data.data.successfulDribbles[j].player.id) successfulDribbles.push(response.data.data.successfulDribbles[j].statistics.successfulDribbles);\n          }\n\n          if (tackles[i] == undefined) tackles.push(0);\n          if (goals[i] == undefined) goals.push(0);\n          if (accuratePasses[i] == undefined) accuratePasses.push(0);\n          if (successfulDribbles[i] == undefined) successfulDribbles.push(0);\n          if (assists[i] == undefined) assists.push(0);\n          playerStatistics.push({\n            teamId: response.data.data.rating[i].team.id,\n            teamName: response.data.data.rating[i].team.name,\n            Rating: response.data.data.rating[i].statistics.rating,\n            playerName: response.data.data.rating[i].player.name,\n            playerId: response.data.data.rating[i].player.id,\n            tackles: tackles[i],\n            goals: goals[i],\n            assists: assists[i],\n            expectedgoals: \"undefined\",\n            successfulDribbles: successfulDribbles[i],\n            accuratePasses: accuratePasses[i]\n          });\n        }\n\n        setplayerStatisticsData(playerStatistics);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getTeamStatistics = function getTeamStatistics(id, Sid) {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'seasons/teams-statistics/result',\n      params: {\n        seasons_id: Sid,\n        seasons_statistics_type: 'overall',\n        unique_tournament_id: id\n      },\n      headers: header()\n    };\n    var teamStatistics = [];\n    var tackles = [];\n    var goalsScored = [];\n    var goalsConceded = [];\n    var successfulDribbles = [];\n    var accuratePasses = [];\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        for (var i = 0; i < response.data.data.avgRating.length; i++) {\n          for (var j = 0; j < response.data.data.avgRating.length; j++) {\n            if (response.data.data.avgRating[i].team.id === response.data.data.tackles[j].team.id) tackles.push(response.data.data.tackles[j].statistics.tackles);\n            if (response.data.data.avgRating[i].team.id === response.data.data.goalsScored[j].team.id) goalsScored.push(response.data.data.goalsScored[j].statistics.goalsScored);\n            if (response.data.data.avgRating[i].team.id === response.data.data.goalsConceded[j].team.id) goalsConceded.push(response.data.data.goalsConceded[j].statistics.goalsConceded);\n            if (response.data.data.avgRating[i].team.id === response.data.data.successfulDribbles[j].team.id) successfulDribbles.push(response.data.data.successfulDribbles[j].statistics.successfulDribbles);\n            if (response.data.data.avgRating[i].team.id === response.data.data.accuratePasses[j].team.id) accuratePasses.push(response.data.data.accuratePasses[j].statistics.accuratePasses);\n          }\n\n          teamStatistics.push({\n            teamId: response.data.data.avgRating[i].team.id,\n            teamName: response.data.data.avgRating[i].team.name,\n            avgRating: response.data.data.avgRating[i].statistics.avgRating,\n            tackles: tackles[i],\n            goalsScored: goalsScored[i],\n            goalsConceded: goalsConceded[i],\n            successfulDribbles: successfulDribbles[i],\n            accuratePasses: accuratePasses[i]\n          });\n          setteamStatisticsData(teamStatistics);\n        }\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getFactSeasondata = function getFactSeasondata(id, Sid) {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'seasons/data',\n      params: {\n        unique_tournament_id: id,\n        seasons_id: Sid\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setseasonsData(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getTeamdatabyid = function getTeamdatabyid(Tid) {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'teams/data',\n      params: {\n        team_id: Tid\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setteamInfodata(response.data.data);\n        setteamCountry(response.data.data.country);\n        setteamManagerInfo(response.data.data.manager);\n        setteamVenueData({\n          cityName: response.data.data.venue.city.name,\n          countryName: response.data.data.venue.country.name,\n          stadium: response.data.data.venue.stadium.name,\n          capacity: response.data.data.venue.stadium.capacity\n        });\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getTeamSeasonStanding = function getTeamSeasonStanding(Tid) {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'teams/standings/seasons',\n      params: {\n        team_id: Tid\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setteamSeasonStanding(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getTeamplayer = function getTeamplayer(Tid) {\n    setIsLoading(true);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'teams/players',\n      params: {\n        team_id: Tid\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setteamPlayer(response.data.data);\n        setPlayers(response.data.data.players);\n        setIsLoading(false);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getteamtournaments = function getteamtournaments(Tid) {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'teams/current-tournaments',\n      params: {\n        team_id: Tid\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        console.log(response.data.data);\n        setteamtournamentdata(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getteamEvent = function getteamEvent(Tid) {\n    setIsLoading(true);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'teams/events',\n      params: {\n        team_id: Tid,\n        page: '0',\n        course_events: 'last'\n      },\n      headers: header()\n    };\n    var tourName = [];\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        for (var i = 0; i < response.data.data.events.length; i++) {\n          tourName.push(response.data.data.events[i].tournament);\n        }\n\n        if (tourName != null && tourName != []) {\n          var tourdata = [];\n          var uniqueObject = {};\n\n          for (var _i3 in tourName) {\n            var objTitle = tourName[_i3]['name'];\n            uniqueObject[objTitle] = tourName[_i3];\n          }\n\n          for (var _i4 in uniqueObject) {\n            var matchdata = [];\n\n            for (var j in response.data.data.events) {\n              if (response.data.data.events[j].tournament.name == uniqueObject[_i4].name && response.data.data.events[j].tournament.category.id == uniqueObject[_i4].category.id) {\n                matchdata.push(response.data.data.events[j]);\n              }\n            }\n\n            tourdata.push({\n              tourdata: uniqueObject[_i4],\n              matchdata: matchdata\n            });\n          }\n\n          setteamEventData(tourdata);\n          setIsLoading(false);\n        }\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getTitle = function getTitle(id) {\n    setIsLoading(true);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'unique-tournaments/data',\n      params: {\n        unique_tournament_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setTitleData(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getseasonlistbytourId = function getseasonlistbytourId(id) {\n    setIsLoading(true);\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'unique-tournaments/seasons',\n      params: {\n        unique_tournament_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        setSeasonList(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var getEventDataById = function getEventDataById(id) {\n    var options = {\n      method: 'GET',\n      url: BASE_URL + 'events/data',\n      params: {\n        event_id: id\n      },\n      headers: header()\n    };\n    axios.request(options).then(function (response) {\n      if (response.status == 200) {\n        console.log(response.data.data);\n        setEventdata(response.data.data);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }; // const getteamdata = (id,Sid,type) => {\n  //   const options = {\n  //     method: 'GET',\n  //     url:BASE_URL2+'unique-tournament/17/season/41886/events/next/1',\n  //   }\n  //   axios.request(options).then(function (response) {\n  //     if(response.status==200)\n  //     {\n  //      console.log(response.data)\n  //     }\n  //   }).catch(function (error) {\n  //     console.error(error);\n  //   });\n  // };\n\n\n  var MemberVerification = function MemberVerification() {\n    alert(\"hello ssssssss\");\n  };\n\n  return /*#__PURE__*/React.createElement(ApiContext.Provider, {\n    value: {\n      getPlayerdatabyId: getPlayerdatabyId,\n      MemberVerification: MemberVerification,\n      getcategories: getcategories,\n      getManagerdatabyId: getManagerdatabyId,\n      getUniquetournament: getUniquetournament,\n      getSchedulecategory: getSchedulecategory,\n      getTournament: getTournament,\n      getPlayermedia: getPlayermedia,\n      getTopLegue: getTopLegue,\n      getPlayertransfarhistory: getPlayertransfarhistory,\n      getManagercareer: getManagercareer,\n      getleaguetandingdata: getleaguetandingdata,\n      getMatchdataBytourandSeasonIds: getMatchdataBytourandSeasonIds,\n      getTeamStatistics: getTeamStatistics,\n      getPlayerStatistics: getPlayerStatistics,\n      getFactSeasondata: getFactSeasondata,\n      getTeamdatabyid: getTeamdatabyid,\n      getTeamSeasonStanding: getTeamSeasonStanding,\n      getTeamplayer: getTeamplayer,\n      getteamtournaments: getteamtournaments,\n      getteamEvent: getteamEvent,\n      getTitle: getTitle,\n      getseasonlistbytourId: getseasonlistbytourId,\n      getEventDataById: getEventDataById,\n      Eventdata: Eventdata,\n      SeasonList: SeasonList,\n      TitleData: TitleData,\n      teamEventData: teamEventData,\n      teamtournamentdata: teamtournamentdata,\n      Players: Players,\n      teamPlayer: teamPlayer,\n      teamSeasonStanding: teamSeasonStanding,\n      teamVenueData: teamVenueData,\n      teamManagerInfo: teamManagerInfo,\n      teamCountry: teamCountry,\n      teamInfodata: teamInfodata,\n      seasonsData: seasonsData,\n      playerStatisticsData: playerStatisticsData,\n      teamStatisticsData: teamStatisticsData,\n      leagueMatchesdata: leagueMatchesdata,\n      leagueCategoryInfo: leagueCategoryInfo,\n      leaguestandingTourInfo: leaguestandingTourInfo,\n      leaguestandingData: leaguestandingData,\n      playertransferinfo: playertransferinfo,\n      managercareer: managercareer,\n      tournamentdata: tournamentdata,\n      playermediainfo: playermediainfo,\n      Uniquetournamentlist: Uniquetournamentlist,\n      scheduledate: scheduledate,\n      schedulecategory: schedulecategory,\n      playerInfo: playerInfo,\n      playercountryInfo: playercountryInfo,\n      playerteamInfo: playerteamInfo,\n      categorieslist: categorieslist,\n      managerInfo: managerInfo,\n      managerteamInfo: managerteamInfo,\n      managercountryInfo: managercountryInfo,\n      managerperformance: managerperformance,\n      isLoading: isLoading,\n      isDisabled: isDisabled\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","axios","BASE_URL","BASE_URL2","header","findDuplicates","ApiContext","ApiProvider","children","playerInfo","setplayerInfo","playerteamInfo","setplayerteamInfo","playercountryInfo","setcountryInfo","playermediainfo","setplayermediainfo","playertransferinfo","setplayertransferinfo","managerInfo","setmanagerInfo","managerteamInfo","setmanagerteamInfo","managercountryInfo","setmanagercountryInfo","managerperformance","setmanagerperformance","managercareer","setmanagercareer","categorieslist","setcategories","Uniquetournamentlist","setUniquetournamentlist","scheduledate","setScheduledate","tournamentdata","settournamentdata","schedulecategory","setschedulecategory","isLoading","setIsLoading","isDisabled","setIsDisabled","message","setmessage","leaguestandingData","setleaguestandingData","leaguestandingTourInfo","setleaguestandingTourInfo","leagueCategoryInfo","setleagueCategoryInfo","leagueMatchesdata","setleagueMatchesdata","teamStatisticsData","setteamStatisticsData","playerStatisticsData","setplayerStatisticsData","seasonsData","setseasonsData","TitleData","setTitleData","SeasonList","setSeasonList","Eventdata","setEventdata","teamSeasonStanding","setteamSeasonStanding","teamInfodata","setteamInfodata","teamCountry","setteamCountry","teamManagerInfo","setteamManagerInfo","teamVenueData","setteamVenueData","teamPlayer","setteamPlayer","Players","setPlayers","teamtournamentdata","setteamtournamentdata","teamEventData","setteamEventData","getPlayerdatabyId","id","options","method","url","params","player_id","headers","request","then","response","status","data","team","country","catch","error","console","getPlayermedia","getPlayertransfarhistory","getManagerdatabyId","manager_id","performance","getManagercareer","getcategories","sport_id","getUniquetournament","category_id","getSchedulecategory","currentDate","Date","toJSON","slice","date","getTopLegue","locale","Topleagues","i","topUniqueTournamentIds","j","uniqueTournaments","push","getTournament","undefined","tourName","length","tournament","tourdata","uniqueObject","objTitle","matchdata","name","category","getleaguetandingdata","type","sid","standing_type","seasons_id","unique_tournament_id","uniqueTournament","rows","getMatchdataBytourandSeasonIds","course_events","page","events","getPlayerStatistics","Sid","seasons_statistics_type","playerStatistics","tackles","goals","assists","EXgoals","successfulDribbles","accuratePasses","rating","player","statistics","accuratePassesPercentage","teamId","teamName","Rating","playerName","playerId","expectedgoals","getTeamStatistics","teamStatistics","goalsScored","goalsConceded","avgRating","getFactSeasondata","getTeamdatabyid","Tid","team_id","manager","cityName","venue","city","countryName","stadium","capacity","getTeamSeasonStanding","getTeamplayer","players","getteamtournaments","log","getteamEvent","getTitle","getseasonlistbytourId","getEventDataById","event_id","MemberVerification","alert"],"sources":["C:/projects/New folder/admin/src/context/ApiContext.js"],"sourcesContent":["import React, {createContext,useContext, useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {BASE_URL,BASE_URL2,header,findDuplicates } from '../UserComponents/Common';\r\nexport const ApiContext = createContext();\r\nexport const ApiProvider = ({children}) => {\r\n\r\n  const [playerInfo, setplayerInfo] = useState([]);\r\n  const [playerteamInfo, setplayerteamInfo] = useState({});\r\n  const [playercountryInfo, setcountryInfo] = useState({});\r\n  const [playermediainfo, setplayermediainfo] = useState([]);\r\n  const [playertransferinfo, setplayertransferinfo] = useState([]);\r\n\r\n\r\n\r\n  const [managerInfo, setmanagerInfo] = useState({});\r\n  const [managerteamInfo, setmanagerteamInfo] = useState({});\r\n  const [managercountryInfo, setmanagercountryInfo] = useState({});\r\n  const [managerperformance, setmanagerperformance] = useState({});\r\n  const [managercareer, setmanagercareer] = useState([]);\r\n\r\n  const [categorieslist, setcategories]=useState([])\r\n  const [Uniquetournamentlist, setUniquetournamentlist]=useState([])\r\n\r\n  const [scheduledate,setScheduledate]=useState([])\r\n  const [tournamentdata,settournamentdata]=useState([])\r\n\r\n  const [schedulecategory,setschedulecategory]=useState([])\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [message, setmessage] = useState('');\r\n\r\n\r\n  const [leaguestandingData,setleaguestandingData]=useState([])\r\n  const [leaguestandingTourInfo,setleaguestandingTourInfo]=useState([])\r\n  const [leagueCategoryInfo,setleagueCategoryInfo]=useState([])\r\n  const [leagueMatchesdata,setleagueMatchesdata]=useState([])\r\n  const [teamStatisticsData,setteamStatisticsData]=useState([])\r\n  const [playerStatisticsData,setplayerStatisticsData]=useState([])\r\n  const [seasonsData,setseasonsData]=useState([])\r\n  const [TitleData,setTitleData]=useState([])\r\n  const [SeasonList,setSeasonList]=useState([])\r\n  const [Eventdata,setEventdata]=useState([])\r\n\r\n\r\n\r\n  const [teamSeasonStanding,setteamSeasonStanding]=useState([])\r\n  const [teamInfodata,setteamInfodata]=useState([])\r\n  const [teamCountry,setteamCountry]=useState([])\r\n  const [teamManagerInfo,setteamManagerInfo]=useState([])\r\n  const [teamVenueData,setteamVenueData]=useState([])\r\n  const [teamPlayer,setteamPlayer]=useState([])\r\n  const [Players,setPlayers]=useState([])\r\n  const [teamtournamentdata,setteamtournamentdata]=useState([])\r\n  const [teamEventData,setteamEventData]=useState([])\r\n\r\n   \r\nconst getPlayerdatabyId= (id) => {\r\n  setIsLoading(true)\r\nconst options = {\r\n  method: 'GET',\r\n  url: BASE_URL+'players/data',\r\n  params: {player_id: id},\r\n  headers: header()\r\n}\r\n axios.request(options).then(function (response) {\r\n  if(response.status==200)\r\n  {\r\n    setIsLoading(false)\r\n    setplayerInfo(response.data.data)\r\n    setplayerteamInfo(response.data.data.team)\r\n    setcountryInfo(response.data.data.country)\r\n   }\r\n}).catch(function (error) {\r\n\tconsole.error(error);\r\n});\r\n         \r\n  };\r\n\r\n  const getPlayermedia= (id) => {\r\n    setIsLoading(true)\r\n  const options = {\r\n    method: 'GET',\r\n    url: BASE_URL+'players/media',\r\n    params: {player_id: id},\r\n    headers: header()\r\n  }\r\n   axios.request(options).then(function (response) {\r\n    if(response.status==200)\r\n    {\r\n      setplayermediainfo(response.data.data)\r\n     }\r\n  }).catch(function (error) {\r\n    console.error(error);\r\n  });\r\n           \r\n    };\r\n\r\n    const getPlayertransfarhistory= (id) => {\r\n      setIsLoading(true)\r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'players/transfer-history',\r\n      params: {player_id: id},\r\n      headers: header()\r\n    }\r\n     axios.request(options).then(function (response) {\r\n      if(response.status==200)\r\n      {\r\n        setplayertransferinfo(response.data.data)\r\n       }\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n             \r\n      };\r\n  \r\n\r\n\r\n\r\n  const  getManagerdatabyId= (id) => {\r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'managers/data',\r\n      params: {manager_id: id},\r\n      headers: header()\r\n    }\r\n    axios.request(options).then(function (response) {\r\n      if(response.status==200)\r\n      {\r\n        setmanagerInfo(response.data.data)\r\n        setmanagerteamInfo(response.data.data.team)\r\n        setmanagercountryInfo(response.data.data.country)\r\n        setmanagerperformance(response.data.data.performance)\r\n      }\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n    \r\n  }\r\n\r\n\r\n  const  getManagercareer= (id) => {\r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'managers/career-history',\r\n      params: {manager_id: id},\r\n      headers: header()\r\n    }\r\n    axios.request(options).then(function (response) {\r\n      if(response.status==200)\r\n      {\r\n        setmanagercareer(response.data.data)\r\n      }\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n    \r\n  }\r\n\r\n\r\n  const  getcategories= () => {\r\n    setIsLoading(true)\r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'categories',\r\n      params: {sport_id: '1'},\r\n      headers: header()\r\n    }\r\n    axios.request(options).then(function (response) {\r\n      if(response.status==200)\r\n      {\r\n        // console.log(response);\r\n        setIsLoading(false)\r\n        setcategories(response.data.data)\r\n      }\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n    \r\n  }\r\n\r\n  const getUniquetournament= (id) => {\r\n    setIsLoading(true)\r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'unique-tournaments',\r\n      params: {category_id: id},\r\n      headers: header()\r\n    };\r\n    // console.log(options)\r\n    axios.request(options).then(function (response) {\r\n      if(response.status==200)\r\n      {\r\n        setIsLoading(false)\r\n        setUniquetournamentlist(response.data.data)\r\n      }\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n const getSchedulecategory = (id) => {\r\n  setIsLoading(true)\r\n    let currentDate = new Date().toJSON().slice(0, 10);\r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'events/schedule/category',\r\n      params: {date: currentDate, category_id: id},\r\n      headers: header()\r\n    }\r\n    axios.request(options).then(function (response) {\r\n      setIsLoading(false)\r\n      if(response.status==200)\r\n      {   \r\n       setschedulecategory(response.data.data)   \r\n      }\r\n\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n    \r\n  }\r\n\r\n  const getTopLegue = () => { \r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'unique-tournaments-top',\r\n      params: {locale: 'DE'},\r\n      headers: header()\r\n    }\r\n    var Topleagues=[]\r\n    axios.request(options).then(function (response) {\r\n      setIsLoading(false)\r\n      if(response.status==200)\r\n      {   \r\n        for(let i in response.data.data.topUniqueTournamentIds)\r\n        {\r\n          for(let j in  response.data.data.uniqueTournaments){\r\n          if(response.data.data.topUniqueTournamentIds[i]===response.data.data.uniqueTournaments[j].id)\r\n          {\r\n            Topleagues.push(response.data.data.uniqueTournaments[i])\r\n          }\r\n         }\r\n        }\r\n        // console.log(Topleagues)\r\n      }\r\n\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n   }\r\n\r\n  const getTournament = (currentDate) => {\r\n    if(currentDate==undefined || currentDate==\"\")\r\n    {\r\n     currentDate = new Date().toJSON().slice(0, 10);\r\n     }\r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'events/schedule/date',\r\n      params: {date: currentDate , sport_id: '1'},\r\n      headers: header()\r\n    }\r\n\r\n    let  tourName = [];\r\n\r\n    axios.request(options).then(function (response) {\r\n      if(response.status==200)\r\n      {\r\n          for (let i = 0; i < response.data.data.length ; i++) {\r\n            tourName.push(response.data.data[i].tournament)\r\n          }\r\n          if(tourName!=null && tourName!=[])\r\n          {\r\n                 let tourdata = [];  \r\n                 let uniqueObject = {};\r\n              \r\n                 for (let i in tourName) {\r\n                    let objTitle = tourName[i]['name'];\r\n                     uniqueObject[objTitle] = tourName[i];\r\n                 }\r\n                 \r\n                 for ( let i in uniqueObject) {\r\n                  var matchdata=[]\r\n                  for(let j in response.data.data) {\r\n                    if(response.data.data[j].tournament.name == uniqueObject[i].name && \r\n                      response.data.data[j].tournament.category.id==uniqueObject[i].category.id)\r\n                       { matchdata.push(response.data.data[j])}\r\n                    }\r\n                  tourdata.push({tourdata:uniqueObject[i],matchdata})\r\n                 }\r\n                 settournamentdata(tourdata)\r\n               }\r\n  \r\n      }\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n    \r\n  }\r\n\r\n\r\n  const getleaguetandingdata = (id,type,sid) => {\r\n  \r\n    const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'seasons/standings',\r\n      params: {standing_type: type , seasons_id: sid, unique_tournament_id: id},\r\n      headers: header()\r\n    }\r\n\r\n    axios.request(options).then(function (response) {\r\n      if(response.status==200)\r\n      {\r\n       setleaguestandingTourInfo(response.data.data[0].tournament.uniqueTournament)\r\n       setleagueCategoryInfo(response.data.data[0].tournament.category)\r\n       setleaguestandingData(response.data.data[0].rows)\r\n      }\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });  \r\n\r\n};\r\n\r\nconst getMatchdataBytourandSeasonIds = (id,sid) => {\r\n     const options = {\r\n      method: 'GET',\r\n      url: BASE_URL+'seasons/events',\r\n      params: {\r\n        course_events: 'last',page: '0',seasons_id: sid,unique_tournament_id: id\r\n      },\r\n      headers: header()\r\n    }\r\n\r\n    axios.request(options).then(function (response) {\r\n      if(response.status==200)\r\n      {\r\n        setleagueMatchesdata(response.data.data.events)\r\n      }\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n};\r\n\r\n\r\n// const getPlayerStatistics = (id,Sid) => {\r\n//   const options = {\r\n//     method: 'GET',\r\n//     url:BASE_URL2+'unique-tournament/'+id+'/season/'+Sid+'/statistics?limit=20&order=-rating&offset=20&accumulation=total&group=summary',\r\n//   }\r\n//   axios.request(options).then(function (response) {\r\n//     if(response.status==200)\r\n//     {\r\n//      setplayerStatisticsData(response.data.results)\r\n//     }\r\n//   }).catch(function (error) {\r\n//     console.error(error);\r\n//   });\r\n// };\r\n\r\n\r\n\r\n\r\nconst getPlayerStatistics = (id,Sid) => {\r\n  const options = {\r\n    method: 'GET',\r\n    url: BASE_URL+'seasons/players-statistics/result',\r\n    params: {\r\n      unique_tournament_id: id,\r\n      seasons_id: Sid,\r\n      seasons_statistics_type: 'overall'\r\n    },\r\n    headers: header()\r\n  }\r\n  let  playerStatistics = [];\r\n  let  tackles=[]; \r\n  let  goals=[];\r\n  let  assists=[];\r\n  let  EXgoals=[];\r\n  let  successfulDribbles=[];\r\n  let  accuratePasses=[];\r\n\r\n  axios.request(options).then(function (response) {\r\n    if(response.status==200)\r\n    {\r\n      \r\n      for (let i = 0; i < response.data.data.rating.length ; i++) {\r\n        for (let j = 0; j < response.data.data.rating.length ; j++) {  \r\n        if(response.data.data.rating[i].player.id===response.data.data.tackles[j].player.id)\r\n            tackles.push(response.data.data.tackles[j].statistics.tackles)\r\n        if(response.data.data.rating[i].player.id===response.data.data.goals[j].player.id)\r\n            goals.push(response.data.data.goals[j].statistics.goals)\r\n        if(response.data.data.rating[i].player.id===response.data.data.accuratePasses[j].player.id)\r\n            accuratePasses.push(response.data.data.accuratePasses[j].statistics.accuratePassesPercentage)   \r\n        if(response.data.data.rating[i].player.id===response.data.data.assists[j].player.id)\r\n             assists.push(response.data.data.assists[j].statistics.assists)           \r\n        // if(response.data.data.avgRating[i].team.id===response.data.data.goalsConceded[j].team.id)\r\n        //     goalsConceded.push(response.data.data.goalsConceded[j].statistics.goalsConceded)\r\n        if(response.data.data.rating[i].player.id===response.data.data.successfulDribbles[j].player.id)\r\n           successfulDribbles.push(response.data.data.successfulDribbles[j].statistics.successfulDribbles)\r\n          \r\n         }\r\n        if(tackles[i]==undefined)\r\n           tackles.push(0)\r\n        if(goals[i]==undefined)\r\n            goals.push(0)  \r\n        if(accuratePasses[i]==undefined)\r\n           accuratePasses.push(0)   \r\n        if(successfulDribbles[i]==undefined)\r\n           successfulDribbles.push(0)    \r\n        if(assists[i]==undefined)\r\n            assists.push(0)    \r\n           \r\n           \r\n         playerStatistics.push({\r\n          teamId:response.data.data.rating[i].team.id,\r\n          teamName:response.data.data.rating[i].team.name,\r\n          Rating:response.data.data.rating[i].statistics.rating,\r\n          playerName:response.data.data.rating[i].player.name,\r\n          playerId:response.data.data.rating[i].player.id,\r\n          tackles:tackles[i],\r\n          goals:goals[i],\r\n          assists:assists[i],\r\n          expectedgoals:\"undefined\",\r\n          successfulDribbles:successfulDribbles[i],\r\n          accuratePasses:accuratePasses[i],\r\n         }) \r\n         \r\n       \r\n      }\r\n      setplayerStatisticsData(playerStatistics)\r\n    }\r\n  }).catch(function (error) {\r\n    console.error(error);\r\n  });\r\n};\r\n\r\n\r\nconst getTeamStatistics = (id,Sid) => {\r\n  const options = {\r\n    method: 'GET',\r\n    url: BASE_URL+'seasons/teams-statistics/result',\r\n    params: {\r\n      seasons_id: Sid,\r\n      seasons_statistics_type: 'overall',\r\n      unique_tournament_id: id,\r\n    },\r\n    headers: header()\r\n  }\r\n  let  teamStatistics = [];\r\n  let  tackles=[]; \r\n  let  goalsScored=[];\r\n  let  goalsConceded=[];\r\n  let  successfulDribbles=[];\r\n  let  accuratePasses=[];\r\n\r\n  axios.request(options).then(function (response) {\r\n    if(response.status==200)\r\n    {\r\n      for (let i = 0; i < response.data.data.avgRating.length ; i++) {\r\n     \r\n        for (let j = 0; j < response.data.data.avgRating.length ; j++) {  \r\n\r\n         if(response.data.data.avgRating[i].team.id===response.data.data.tackles[j].team.id)\r\n           tackles.push(response.data.data.tackles[j].statistics.tackles)\r\n         if(response.data.data.avgRating[i].team.id===response.data.data.goalsScored[j].team.id)\r\n          goalsScored.push(response.data.data.goalsScored[j].statistics.goalsScored)\r\n         if(response.data.data.avgRating[i].team.id===response.data.data.goalsConceded[j].team.id)\r\n          goalsConceded.push(response.data.data.goalsConceded[j].statistics.goalsConceded)\r\n         if(response.data.data.avgRating[i].team.id===response.data.data.successfulDribbles[j].team.id)\r\n         successfulDribbles.push(response.data.data.successfulDribbles[j].statistics.successfulDribbles)\r\n         if(response.data.data.avgRating[i].team.id===response.data.data.accuratePasses[j].team.id)\r\n          accuratePasses.push(response.data.data.accuratePasses[j].statistics.accuratePasses)\r\n         }     \r\n        \r\n         teamStatistics.push({\r\n          teamId:response.data.data.avgRating[i].team.id,\r\n          teamName:response.data.data.avgRating[i].team.name,\r\n          avgRating:response.data.data.avgRating[i].statistics.avgRating,\r\n          tackles:tackles[i],\r\n          goalsScored:goalsScored[i],\r\n          goalsConceded:goalsConceded[i],\r\n          successfulDribbles:successfulDribbles[i],\r\n          accuratePasses:accuratePasses[i],\r\n         }) \r\n\r\n         setteamStatisticsData(teamStatistics) \r\n        \r\n      }\r\n      \r\n    }\r\n  }).catch(function (error) {\r\n    console.error(error);\r\n  });\r\n};\r\n\r\n\r\nconst getFactSeasondata = (id,Sid) => {\r\n\r\n  const options = {\r\n    method: 'GET',\r\n    url:  BASE_URL+'seasons/data',\r\n    params: {unique_tournament_id: id, seasons_id: Sid},\r\n    headers:header()\r\n  }; \r\n  axios.request(options).then(function (response) {\r\n    if(response.status==200)\r\n    {\r\n       setseasonsData(response.data.data)\r\n        \r\n      }\r\n      \r\n  }).catch(function (error) {\r\n    console.error(error);\r\n  });\r\n};\r\n\r\n\r\n\r\nconst getTeamdatabyid = (Tid) => {\r\n\r\n  const options = {\r\n    method: 'GET',\r\n    url:BASE_URL+'teams/data',\r\n    params: {team_id: Tid},\r\n    headers:header()\r\n  };\r\n\r\n  axios.request(options).then(function (response) {\r\n\r\n    if(response.status==200)\r\n    {\r\n         \r\n      setteamInfodata(response.data.data)\r\n      setteamCountry(response.data.data.country)\r\n      setteamManagerInfo(response.data.data.manager)\r\n      setteamVenueData({cityName:response.data.data.venue.city.name,\r\n       countryName:response.data.data.venue.country.name,\r\n       stadium:response.data.data.venue.stadium.name,\r\n       capacity:response.data.data.venue.stadium.capacity\r\n      })                    \r\n        \r\n      }\r\n      \r\n  }).catch(function (error) {\r\n    console.error(error);\r\n  });\r\n};\r\n\r\n\r\nconst getTeamSeasonStanding = (Tid) => {\r\n\r\n  const options = {\r\n    method: 'GET',\r\n    url: BASE_URL+'teams/standings/seasons',\r\n    params: {team_id: Tid},\r\n    headers:header()\r\n  };\r\n\r\n  axios.request(options).then(function (response) {\r\n\r\n    if(response.status==200)\r\n    {    \r\n      setteamSeasonStanding(response.data.data)                 \r\n    }   \r\n      \r\n      \r\n  }).catch(function (error) {\r\n    console.error(error);\r\n  });\r\n};\r\n\r\nconst getTeamplayer = (Tid) => {\r\n  setIsLoading(true)\r\n  const options = {\r\n    method: 'GET',\r\n    url: BASE_URL+'teams/players',\r\n    params: {team_id: Tid},\r\n    headers:header()\r\n  };\r\n  axios.request(options).then(function (response) {\r\n\r\n    if(response.status==200)\r\n    {\r\n  \r\n      setteamPlayer(response.data.data)     \r\n      setPlayers(response.data.data.players)   \r\n      setIsLoading(false)          \r\n    }   \r\n      \r\n      \r\n  }).catch(function (error) {\r\n    console.error(error);\r\n  });\r\n};\r\n\r\nconst getteamtournaments = (Tid) => {\r\n \r\n\r\n  const options = {\r\n    method: 'GET',\r\n    url:  BASE_URL+'teams/current-tournaments',\r\n    params: {team_id: Tid},\r\n    headers:header()\r\n  };\r\n  axios.request(options).then(function (response) {\r\n    if(response.status==200)\r\n    {\r\n     console.log(response.data.data)\r\n     setteamtournamentdata(response.data.data)\r\n    \r\n    }\r\n  }).catch(function (error) {\r\n    console.error(error);\r\n  });\r\n};\r\n\r\n const getteamEvent = (Tid) => {\r\n  setIsLoading(true)\r\n  const options = {\r\n    method: 'GET',\r\n    url: BASE_URL+'teams/events',\r\n    params: {team_id: Tid, page: '0', course_events: 'last'},\r\n    headers:header()\r\n  };\r\n  let  tourName = [];\r\n\r\n  axios.request(options).then(function (response) {\r\n    \r\n    if(response.status==200)\r\n    {\r\n      \r\n        for (let i = 0; i < response.data.data.events.length ; i++) {\r\n          tourName.push(response.data.data.events[i].tournament)\r\n        }\r\n        if(tourName!=null && tourName!=[])\r\n        {\r\n               let tourdata = [];  \r\n               let uniqueObject = {};\r\n            \r\n               for (let i in tourName) {\r\n                  let objTitle = tourName[i]['name'];\r\n                   uniqueObject[objTitle] = tourName[i];\r\n               }\r\n               \r\n               for ( let i in uniqueObject) {\r\n                var matchdata=[]\r\n                for(let j in response.data.data.events) {\r\n                  if(response.data.data.events[j].tournament.name == uniqueObject[i].name && \r\n                    response.data.data.events[j].tournament.category.id==uniqueObject[i].category.id)\r\n                     { matchdata.push(response.data.data.events[j])}\r\n                  }\r\n                tourdata.push({tourdata:uniqueObject[i],matchdata})\r\n               }\r\n               setteamEventData(tourdata)\r\n               setIsLoading(false)\r\n             }\r\n\r\n    }\r\n    \r\n  }).catch(function (error) {\r\n    console.error(error);\r\n  });\r\n};\r\n\r\nconst getTitle = (id) => {\r\n  setIsLoading(true)\r\n  const options = {\r\n    method: 'GET',\r\n    url: BASE_URL+'unique-tournaments/data',\r\n    params: {unique_tournament_id: id},\r\n    headers:header()\r\n  };\r\n  axios.request(options).then(function (response) {\r\n\r\n    if(response.status==200)\r\n    {\r\n      setTitleData(response.data.data)\r\n    }   \r\n      \r\n      \r\n  }).catch(function (error) {\r\n    console.error(error);\r\n  });\r\n};\r\n\r\n\r\nconst getseasonlistbytourId= (id) => {\r\n  setIsLoading(true)\r\n  const options = {\r\n    method: 'GET',\r\n    url: BASE_URL+'unique-tournaments/seasons',\r\n    params: {unique_tournament_id: id},\r\n    headers:header()\r\n  };\r\n  axios.request(options).then(function (response) {\r\n\r\n    if(response.status==200)\r\n    {\r\n      setSeasonList(response.data.data)\r\n    }   \r\n      \r\n      \r\n  }).catch(function (error) {\r\n    console.error(error);\r\n  });\r\n};\r\n\r\nconst getEventDataById= (id) => {\r\n \r\n  const options = {\r\n    method: 'GET',\r\n    url: BASE_URL+'events/data',\r\n    params: {event_id: id},\r\n    headers:header()\r\n  };\r\n  axios.request(options).then(function (response) {\r\n\r\n    if(response.status==200)\r\n    {\r\n      console.log(response.data.data)\r\n      setEventdata(response.data.data)\r\n    }   \r\n      \r\n      \r\n  }).catch(function (error) {\r\n    console.error(error);\r\n  });\r\n};\r\n\r\n// const getteamdata = (id,Sid,type) => {\r\n//   const options = {\r\n//     method: 'GET',\r\n//     url:BASE_URL2+'unique-tournament/17/season/41886/events/next/1',\r\n//   }\r\n//   axios.request(options).then(function (response) {\r\n//     if(response.status==200)\r\n//     {\r\n//      console.log(response.data)\r\n    \r\n//     }\r\n//   }).catch(function (error) {\r\n//     console.error(error);\r\n//   });\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const MemberVerification = () => {\r\n      alert(\"hello ssssssss\");\r\n  };\r\n\r\n\r\n  return (\r\n    <ApiContext.Provider\r\n      value={{\r\n        getPlayerdatabyId,\r\n        MemberVerification,\r\n        getcategories,\r\n        getManagerdatabyId,\r\n        getUniquetournament,\r\n        getSchedulecategory, \r\n        getTournament,\r\n        getPlayermedia,\r\n        getTopLegue,\r\n        getPlayertransfarhistory,\r\n        getManagercareer,\r\n        getleaguetandingdata,\r\n        getMatchdataBytourandSeasonIds,\r\n        getTeamStatistics,\r\n        getPlayerStatistics,\r\n        getFactSeasondata,\r\n        getTeamdatabyid,\r\n        getTeamSeasonStanding, \r\n        getTeamplayer,\r\n        getteamtournaments,\r\n        getteamEvent,\r\n        getTitle,\r\n        getseasonlistbytourId,\r\n        getEventDataById,\r\n\r\n        Eventdata,\r\n        SeasonList,\r\n        TitleData,\r\n        teamEventData,\r\n        teamtournamentdata,\r\n        Players, \r\n        teamPlayer,\r\n        teamSeasonStanding,\r\n        teamVenueData,\r\n        teamManagerInfo,\r\n        teamCountry,\r\n        teamInfodata,\r\n        seasonsData,\r\n        playerStatisticsData,\r\n        teamStatisticsData,\r\n        leagueMatchesdata,\r\n        leagueCategoryInfo,\r\n        leaguestandingTourInfo,\r\n        leaguestandingData,\r\n        playertransferinfo,\r\n        managercareer,\r\n        tournamentdata,\r\n        playermediainfo,\r\n        Uniquetournamentlist,\r\n        scheduledate,\r\n        schedulecategory,\r\n        playerInfo,\r\n        playercountryInfo,\r\n        playerteamInfo,\r\n        categorieslist,\r\n        managerInfo,\r\n        managerteamInfo,\r\n        managercountryInfo,\r\n        managerperformance,\r\n        isLoading,\r\n        isDisabled\r\n      }}>\r\n      {children}\r\n    </ApiContext.Provider>\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}